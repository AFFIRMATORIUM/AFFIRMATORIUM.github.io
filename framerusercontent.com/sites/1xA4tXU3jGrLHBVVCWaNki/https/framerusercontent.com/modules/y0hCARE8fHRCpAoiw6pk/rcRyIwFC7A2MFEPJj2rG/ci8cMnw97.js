// Generated by Framer (3406f4c)
import {
    jsx as _jsx,
    jsxs as _jsxs
} from "react/jsx-runtime";
import {
    addFonts,
    addPropertyControls,
    ControlType,
    cx,
    getFontsFromSharedStyle,
    RichText,
    useActiveVariantCallback,
    useComponentViewport,
    useLocaleInfo,
    useVariantState,
    withCSS,
    withFX,
    withOptimizedAppearEffect
} from "framer";
import {
    LayoutGroup,
    motion,
    MotionConfigContext
} from "framer-motion";
import * as React from "react";
import {
    useRef
} from "react";
import * as sharedStyle from "https://framerusercontent.com/modules/bmqwh6DI50XiOmZRzhNs/67RR52uxesggnLLsiqd6/cI8El5bxi.js";
import getLocalizedValue from "https://framerusercontent.com/modules/JRtt1KzJovNWlhsdzvSu/qqoIrN2WQSSuDBKPQ5Xm/ci8cMnw97.js";
const MotionDivWithFX = withFX(motion.div);
const MotionDivWithFXWithOptimizedAppearEffect = withOptimizedAppearEffect(withFX(motion.div));
const cycleOrder = ["AiQHACD55", "qktKqSLAm", "YbJ0i8Izk"];
const serializationHash = "framer-doBOM";
const variantClassNames = {
    AiQHACD55: "framer-v-4ojnh",
    qktKqSLAm: "framer-v-1qdnon8",
    YbJ0i8Izk: "framer-v-14xo4j"
};

function addPropertyOverrides(overrides, ...variants) {
    const nextOverrides = {};
    variants ? .forEach(variant => variant && Object.assign(nextOverrides, overrides[variant]));
    return nextOverrides;
}
const transition1 = {
    duration: 0,
    type: "tween"
};
const transition2 = {
    delay: 0,
    duration: .3,
    ease: [.44, 0, .56, 1],
    type: "tween"
};
const animation = {
    opacity: 1,
    rotate: 0,
    rotateX: 0,
    rotateY: 0,
    scale: 1,
    skewX: 0,
    skewY: 0,
    transition: transition2,
    x: 0,
    y: 0
};
const animation1 = {
    opacity: .001,
    rotate: 0,
    rotateX: 0,
    rotateY: 0,
    scale: 1,
    skewX: 0,
    skewY: 0,
    x: 0,
    y: 0
};
const transition3 = {
    delay: 0,
    duration: 1,
    ease: [0, 0, 1, 1],
    type: "tween"
};
const animation2 = {
    opacity: 1,
    rotate: 360,
    rotateX: 0,
    rotateY: 0,
    scale: 1,
    skewX: 0,
    skewY: 0,
    x: 0,
    y: 0
};
const Transition = ({
    value,
    children
}) => {
    const config = React.useContext(MotionConfigContext);
    const transition = value ? ? config.transition;
    const contextValue = React.useMemo(() => ({ ...config,
        transition
    }), [JSON.stringify(transition)]);
    return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
        value: contextValue,
        children: children
    });
};
const Variants = motion.create(React.Fragment);
const humanReadableVariantMap = {
    Default: "AiQHACD55",
    Hidden: "YbJ0i8Izk",
    Loading: "qktKqSLAm"
};
const getProps = ({
    click,
    height,
    id,
    width,
    ...props
}) => {
    return { ...props,
        variant: humanReadableVariantMap[props.variant] ? ? props.variant ? ? "AiQHACD55",
        Wld3NDzSj: click ? ? props.Wld3NDzSj
    };
};
const createLayoutDependency = (props, variants) => {
    if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
    return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function(props, ref) {
    const fallbackRef = useRef(null);
    const refBinding = ref ? ? fallbackRef;
    const defaultLayoutId = React.useId();
    const {
        activeLocale,
        setLocale
    } = useLocaleInfo();
    const componentViewport = useComponentViewport();
    const {
        style,
        className,
        layoutId,
        variant,
        Wld3NDzSj,
        ...restProps
    } = getProps(props);
    const {
        baseVariant,
        classNames,
        clearLoadingGesture,
        gestureHandlers,
        gestureVariant,
        isLoading,
        setGestureState,
        setVariant,
        variants
    } = useVariantState({
        cycleOrder,
        defaultVariant: "AiQHACD55",
        ref: refBinding,
        variant,
        variantClassNames
    });
    const layoutDependency = createLayoutDependency(props, variants);
    const {
        activeVariantCallback,
        delay
    } = useActiveVariantCallback(baseVariant);
    const onTapn9xadi = activeVariantCallback(async (...args) => {
        setGestureState({
            isPressed: false
        });
        if (Wld3NDzSj) {
            const res = await Wld3NDzSj(...args);
            if (res === false) return false;
        }
    });
    const sharedStyleClassNames = [sharedStyle.className];
    const isDisplayed = () => {
        if (baseVariant === "YbJ0i8Izk") return false;
        return true;
    };
    const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
    const isDisplayed1 = () => {
        if (baseVariant === "qktKqSLAm") return false;
        return true;
    };
    const isDisplayed2 = () => {
        if (baseVariant === "qktKqSLAm") return true;
        return false;
    };
    return /*#__PURE__*/ _jsx(LayoutGroup, {
        id: layoutId ? ? defaultLayoutId,
        children: /*#__PURE__*/ _jsx(Variants, {
            animate: variants,
            initial: false,
            children: isDisplayed() && /*#__PURE__*/ _jsx(Transition, {
                value: transition1,
                children: /*#__PURE__*/ _jsxs(motion.button, { ...restProps,
                    ...gestureHandlers,
                    className: cx(scopingClassNames, "framer-4ojnh", className, classNames),
                    "data-framer-name": "Default",
                    "data-highlight": true,
                    "data-reset": "button",
                    layoutDependency: layoutDependency,
                    layoutId: "AiQHACD55",
                    onTap: onTapn9xadi,
                    ref: refBinding,
                    style: {
                        backgroundColor: "var(--token-59e0057d-33bd-4745-b3ad-1acb6546c5ce, rgb(51, 51, 51))",
                        borderBottomLeftRadius: 10,
                        borderBottomRightRadius: 10,
                        borderTopLeftRadius: 10,
                        borderTopRightRadius: 10,
                        ...style
                    },
                    ...addPropertyOverrides({
                        qktKqSLAm: {
                            "data-framer-name": "Loading"
                        }
                    }, baseVariant, gestureVariant),
                    children: [isDisplayed1() && /*#__PURE__*/ _jsx(RichText, {
                        __fromCanvasComponent: true,
                        children: getLocalizedValue("v0", activeLocale) ? ? /*#__PURE__*/ _jsx(React.Fragment, {
                            children: /*#__PURE__*/ _jsx(motion.p, {
                                className: "framer-styles-preset-t1dtgm",
                                "data-styles-preset": "cI8El5bxi",
                                style: {
                                    "--framer-text-color": "var(--extracted-r6o4lv, var(--token-e102ed96-0129-4d91-a500-6c51cf464136, rgb(240, 240, 240)))"
                                },
                                children: "Load More"
                            })
                        }),
                        className: "framer-1aztof5",
                        fonts: ["Inter"],
                        layoutDependency: layoutDependency,
                        layoutId: "tQOSiNGLp",
                        style: {
                            "--extracted-r6o4lv": "var(--token-e102ed96-0129-4d91-a500-6c51cf464136, rgb(240, 240, 240))"
                        },
                        verticalAlignment: "top",
                        withExternalLayout: true
                    }), isDisplayed2() && /*#__PURE__*/ _jsx(MotionDivWithFXWithOptimizedAppearEffect, {
                        __perspectiveFX: false,
                        __smartComponentFX: true,
                        __targetOpacity: 1,
                        animate: animation,
                        className: "framer-15bh9q6",
                        "data-framer-appear-id": "15bh9q6",
                        "data-framer-name": "Spinner",
                        initial: animation1,
                        layoutDependency: layoutDependency,
                        layoutId: "gIUBaq8D7",
                        optimized: true,
                        style: {
                            mask: "url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg?width=20&height=20') alpha no-repeat center / cover add",
                            WebkitMask: "url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg?width=20&height=20') alpha no-repeat center / cover add"
                        },
                        children: /*#__PURE__*/ _jsx(MotionDivWithFX, {
                            __framer__loop: animation2,
                            __framer__loopEffectEnabled: true,
                            __framer__loopRepeatDelay: 0,
                            __framer__loopRepeatType: "loop",
                            __framer__loopTransition: transition3,
                            __perspectiveFX: false,
                            __smartComponentFX: true,
                            __targetOpacity: 1,
                            className: "framer-ce1io3",
                            "data-framer-name": "Conic",
                            layoutDependency: layoutDependency,
                            layoutId: "TFGAGtn6t",
                            style: {
                                background: "conic-gradient(from 0deg at 50% 50%, rgba(255, 255, 255, 0) 0deg, rgb(255, 255, 255) 342deg)"
                            },
                            children: /*#__PURE__*/ _jsx(motion.div, {
                                className: "framer-15eo3sl",
                                "data-framer-name": "Round",
                                layoutDependency: layoutDependency,
                                layoutId: "DNlbpfPwc",
                                style: {
                                    backgroundColor: "rgb(255, 255, 255)",
                                    borderBottomLeftRadius: 1,
                                    borderBottomRightRadius: 1,
                                    borderTopLeftRadius: 1,
                                    borderTopRightRadius: 1
                                }
                            })
                        })
                    })]
                })
            })
        })
    });
});
const css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-doBOM.framer-qqofey, .framer-doBOM .framer-qqofey { display: block; }", ".framer-doBOM.framer-4ojnh { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 40px; justify-content: center; padding: 0px; position: relative; width: 100px; }", ".framer-doBOM .framer-1aztof5 { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }", ".framer-doBOM .framer-15bh9q6 { aspect-ratio: 1 / 1; flex: none; gap: 10px; height: var(--framer-aspect-ratio-supported, 20px); overflow: visible; position: relative; width: 20px; }", ".framer-doBOM .framer-ce1io3 { bottom: 0px; flex: none; gap: 10px; left: 0px; overflow: visible; position: absolute; right: 0px; top: 0px; }", ".framer-doBOM .framer-15eo3sl { flex: none; height: 2px; left: calc(50.00000000000002% - 2px / 2); overflow: visible; position: absolute; top: 0px; width: 2px; }", ...sharedStyle.css];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 40
 * @framerIntrinsicWidth 100
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","fixed"]},"qktKqSLAm":{"layout":["fixed","fixed"]},"YbJ0i8Izk":{"layout":["fixed","fixed"]}}}
 * @framerVariables {"Wld3NDzSj":"click"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerAutoSizeImages true
 * @framerComponentViewportWidth true
 * @framerColorSyntax true
 */
const Framerci8cMnw97 = withCSS(Component, css, "framer-doBOM");
export default Framerci8cMnw97;
Framerci8cMnw97.displayName = "Load More";
Framerci8cMnw97.defaultProps = {
    height: 40,
    width: 100
};
addPropertyControls(Framerci8cMnw97, {
    variant: {
        options: ["AiQHACD55", "qktKqSLAm", "YbJ0i8Izk"],
        optionTitles: ["Default", "Loading", "Hidden"],
        title: "Variant",
        type: ControlType.Enum
    },
    Wld3NDzSj: {
        title: "Click",
        type: ControlType.EventHandler
    }
});
addFonts(Framerci8cMnw97, [{
    explicitInter: true,
    fonts: [{
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
        url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
        url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+1F00-1FFF",
        url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0370-03FF",
        url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
        url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
        url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
        weight: "400"
    }, {
        family: "Inter",
        source: "framer",
        style: "normal",
        unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
        url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
        weight: "400"
    }]
}, ...getFontsFromSharedStyle(sharedStyle.fonts)], {
    supportsExplicitInterCodegen: true
});
export const __FramerMetadata__ = {
    "exports": {
        "default": {
            "type": "reactComponent",
            "name": "Framerci8cMnw97",
            "slots": [],
            "annotations": {
                "framerIntrinsicHeight": "40",
                "framerVariables": "{\"Wld3NDzSj\":\"click\"}",
                "framerImmutableVariables": "true",
                "framerComponentViewportWidth": "true",
                "framerIntrinsicWidth": "100",
                "framerContractVersion": "1",
                "framerDisplayContentsDiv": "false",
                "framerAutoSizeImages": "true",
                "framerCanvasComponentVariantDetails": "{\"propertyName\":\"variant\",\"data\":{\"default\":{\"layout\":[\"fixed\",\"fixed\"]},\"qktKqSLAm\":{\"layout\":[\"fixed\",\"fixed\"]},\"YbJ0i8Izk\":{\"layout\":[\"fixed\",\"fixed\"]}}}",
                "framerColorSyntax": "true"
            }
        },
        "Props": {
            "type": "tsType",
            "annotations": {
                "framerContractVersion": "1"
            }
        },
        "__FramerMetadata__": {
            "type": "variable"
        }
    }
}
//# sourceMappingURL=./ci8cMnw97.map